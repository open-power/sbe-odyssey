<!-- IBM_PROLOG_BEGIN_TAG                                                   -->
<!-- This is an automatically generated prolog.                             -->
<!--                                                                        -->
<!-- $Source: public/src/import/public/hwp/generic/xml/attribute_info/poz_chip_attributes.xml $ -->
<!--                                                                        -->
<!-- OpenPOWER sbe Project                                                  -->
<!--                                                                        -->
<!-- Contributors Listed Below - COPYRIGHT 2022,2024                        -->
<!-- [+] International Business Machines Corp.                              -->
<!--                                                                        -->
<!--                                                                        -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");        -->
<!-- you may not use this file except in compliance with the License.       -->
<!-- You may obtain a copy of the License at                                -->
<!--                                                                        -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                         -->
<!--                                                                        -->
<!-- Unless required by applicable law or agreed to in writing, software    -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,      -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        -->
<!-- implied. See the License for the specific language governing           -->
<!-- permissions and limitations under the License.                         -->
<!--                                                                        -->
<!-- IBM_PROLOG_END_TAG                                                     -->
<attributes>
  <!-- ******************************************************************** -->
  <attribute>
    <id>ATTR_DYNAMIC_INIT_FEATURE_VEC</id>
    <targetType>TARGET_TYPE_PROC_CHIP, TARGET_TYPE_HUB_CHIP, TARGET_TYPE_COMPUTE_CHIP, TARGET_TYPE_OCMB_CHIP</targetType>
    <description>
     Bit vector of dynamic init features which are applied
     when customizing the IPL image. Individual
     features are selected/deselected by setting/clearing
     the corresponding bit in this vector.
     Note: multiple features can be selected at once.
    </description>
    <valueType>uint64</valueType>
    <array>2</array>
    <initToZero/>
    <writeable/>
    <persistRuntime/>
  </attribute>
  <!-- ******************************************************************** -->
  <attribute>
    <id>ATTR_BOOT_FLAGS</id>
    <targetType>TARGET_TYPE_PROC_CHIP, TARGET_TYPE_HUB_CHIP</targetType>
    <description>
      Controls boot, platform behavior of SPPE

      Bits 0-1   : Boot indication
       - 0b00    : Autoboot
       - 0b01    : Pause for code update check, then autoboot
       - 0b10    : Boot to runtime, no code update check, no isteps
                 :   Command table execution is controlled separately (hreset vs CBS)
       - 0b11    : Istep mode
      Bit 2      : MPIPL mode
      Bit 3      : Conveys ATTR_IS_SIMULATION state (0=HW, 1=AWAN/MESA)
      Bit 4      : Emulate Security Enable (SAB Set)
      Bit 5      : Indicates that the SPPE should not send back internal FFDC on any ChipOp failure response
      Bit 6      : Disable security, if permitted
      Bit 7      : Allow ATTR overrides in secure system
      Bits 8-9   : Override SMT mode
      Bit 10     : No checkstop on master stop
      Bit 11     : Disable Scom Filtering
      Bit 12     : Disable Invalid Scom address check
      Bit 13     : Indicates MFG mode, where extra tests/isteps can be executed
      Bit 14     : Enable Suart output
      Bit 15     : Skip MPIPL Dump
      Bit 16     : Enable ECDSA Signature enable (when not fused on)
      Bit 17     : Enable Dilithium Signature enable (when not fused on)
      Bit 18     : Enable ECID verification (when not fused on)
      Bit 19     : Enable HW key hash verification (when not fused on)
      Bit 20     : Enable file hash calculation (when not fused on)
      Bit 21     : Enforce matching security version for boot loader
      Bit 22     : Set Secure Boot Validity Verification. Force enables strict secure boot failure
      Bit 23     : Disable IOBist
      Bit 24     : Disable Abist
      Bit 25     : Disable Lbist
      Bit 26     : Enable Burn-In mode
      Bit 27     : Graceful terminate of any istep (via HWP if supported) -- only works when in imprint key mode
      Bit 28     : Force production Mode/ Production signed image.
      Bits 29-31 : Reserved
    </description>
    <valueType>uint32</valueType>
    <writeable/>
    <platInit/>
    <mrwHide/>
  </attribute>
  <!-- ******************************************************************** -->
  <attribute>
    <id>ATTR_SECURITY_LEVEL</id>
    <targetType>TARGET_TYPE_PROC_CHIP, TARGET_TYPE_COMPUTE_CHIP, TARGET_TYPE_OCMB_CHIP</targetType>
    <description>
      Reflects the boot security level of the given chip. This is purely informative and to be used by procedures
      to adjust their behavior, e.g. by disabling some debugging functions.
      This attribute is set by SBE during SBE boot flow. Once set by SBE the ATTR cannot be updated.
      Settings for a higher security level done in OTPROM will always take precedence over
      corresponding bits defined in scratch 11 for lab/test-only purposes.

      Level 0 - DISABLED   - Security disabled, SAB=0
      Level 1 - PERMISSIVE - Security enabled but not strictly enforced, SAB=1 but firmware signed with imprint keys
                             If this is set, then users can still override (set to 1) the default setting for allow-deny
                             list enable with bit 11 in scratch 11 to disable scom filtering but would
                             still get a chip-op error for such scoms.
      Level 2 - ENFORCING  - Security enabled and strictly enforced, SAB=1 and firmware signed with production keys
    </description>
    <valueType>uint8</valueType>
    <enum>
      DISABLED   = 0,
      PERMISSIVE = 1,
      ENFORCING  = 2
    </enum>
    <platInit/>
    <writeable/>
    <default>ENFORCING</default>
    <sbeAttrSync toSBE="0" fromSBE="1" chipTypes="ody">
      <targetTypes>TARGET_TYPE_OCMB_CHIP</targetTypes>
    </sbeAttrSync>
    <mrwHide/>
    <denyForSecurityUpdate/>
  </attribute>
  <!-- ******************************************************************** -->
  <attribute>
    <id>ATTR_RTG_SCAN_ORDER</id>
    <targetType>TARGET_TYPE_PROC_CHIP, TARGET_TYPE_HUB_CHIP, TARGET_TYPE_COMPUTE_CHIP, TARGET_TYPE_OCMB_CHIP</targetType>
    <description>
      Permits customization of the order in which RTG (repair, time, gptr) scan ring images will be
      applied.

      CUST_BEFORE_EKB        CUST pak settings apply prior to EKB specified inits
      EKB_BEFORE_CUST        EKB specified inits apply prior to CUST pak settings
    </description>
    <valueType>uint8</valueType>
    <enum>
      CUST_BEFORE_EKB = 0,
      EKB_BEFORE_CUST = 1,
    </enum>
    <platInit/>
    <writeable/>
    <default>CUST_BEFORE_EKB</default>
    <mrwHide/>
  </attribute>
  <!-- ******************************************************************** -->
</attributes>
