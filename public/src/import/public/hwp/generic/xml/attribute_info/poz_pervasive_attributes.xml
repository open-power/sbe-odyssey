<!-- IBM_PROLOG_BEGIN_TAG                                                   -->
<!-- This is an automatically generated prolog.                             -->
<!--                                                                        -->
<!-- $Source: public/src/import/public/hwp/generic/xml/attribute_info/poz_pervasive_attributes.xml $ -->
<!--                                                                        -->
<!-- OpenPOWER sbe Project                                                  -->
<!--                                                                        -->
<!-- Contributors Listed Below - COPYRIGHT 2022                             -->
<!-- [+] International Business Machines Corp.                              -->
<!--                                                                        -->
<!--                                                                        -->
<!-- Licensed under the Apache License, Version 2.0 (the "License");        -->
<!-- you may not use this file except in compliance with the License.       -->
<!-- You may obtain a copy of the License at                                -->
<!--                                                                        -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                         -->
<!--                                                                        -->
<!-- Unless required by applicable law or agreed to in writing, software    -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,      -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        -->
<!-- implied. See the License for the specific language governing           -->
<!-- permissions and limitations under the License.                         -->
<!--                                                                        -->
<!-- IBM_PROLOG_END_TAG                                                     -->
<attributes>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_PG</id>
  <targetType>TARGET_TYPE_PERV</targetType>
  <description>
    Chiplet partial good information to be consumed by IPL HWP code.
    This attribute logically represents the combination of VPD PG plus
    any additional runtime deconfiguration to be applied on the current IPL.
  </description>
  <valueType>uint32</valueType>
  <default>0xFFFFFFFF</default>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_CP_PLLFLT_BYPASS</id>
  <targetType>TARGET_TYPE_HUB_CHIP, TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Keep HUB chip FILTER PLLs in bypass
  </description>
  <valueType>uint8</valueType>
  <enum>BYPASS = 0x1, NON_BYPASS = 0x0</enum>
  <writeable/>
  <platInit/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_CP_PLLNEST_BYPASS</id>
  <targetType>TARGET_TYPE_HUB_CHIP, TARGET_TYPE_PROC_CHIP</targetType>
  <description>
    Keep HUB NEST PLL in bypass
  </description>
  <valueType>uint8</valueType>
  <enum>BYPASS = 0x1, NON_BYPASS = 0x0</enum>
  <writeable/>
  <platInit/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_CLOCKSTOP_ON_XSTOP</id>
  <targetType>TARGET_TYPE_COMPUTE_CHIP, TARGET_TYPE_HUB_CHIP, TARGET_TYPE_OCMB_CHIP, TARGET_TYPE_PROC_CHIP</targetType>
  <description>
  Set up the chip so that all chiplet clocks are
  automatically stopped in case of a checkstop. Possible enum values:
  DISABLED - Don't stop clocks on any error
  STOP_ON_XSTOP - Stop on either an xstop in the local chiplet
     or on a system xstop coming in from outside the chiplet
  STOP_ON_XSTOP_AND_SPATTN - Like above, plus special attentions
  STOP_ON_STAGED_XSTOP - Stop _only_ on an incoming staged system xstop
     to ensure that all chiplets stop in the same instant. This will result
     in a longer delay between the original error and the clocks stopping.
  </description>
  <valueType>uint8</valueType>
  <enum>DISABLED = 0x00, STOP_ON_XSTOP = 0x7B, STOP_ON_XSTOP_AND_SPATTN = 0x5B, STOP_ON_STAGED_XSTOP = 0xFD</enum>
  <writeable/>
  <platInit/>
  <initToZero/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_ENABLE_LBIST</id>
  <targetType>TARGET_TYPE_COMPUTE_CHIP, TARGET_TYPE_HUB_CHIP, TARGET_TYPE_OCMB_CHIP, TARGET_TYPE_PROC_CHIP</targetType>
  <description>
  Enable or Disable LBIST.
  This is to skip LBIST procedures if user elects
  </description>
  <valueType>uint8</valueType>
  <enum>DISABLE = 0x0,ENABLE = 0x1</enum>
  <writeable/>
  <default>ENABLE</default>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_ENABLE_ABIST</id>
  <targetType>TARGET_TYPE_COMPUTE_CHIP, TARGET_TYPE_HUB_CHIP, TARGET_TYPE_OCMB_CHIP, TARGET_TYPE_PROC_CHIP</targetType>
  <description>
  Enable or Disable ABIST.
  This is to skip ABIST procedures if user elects
  </description>
  <valueType>uint8</valueType>
  <enum>DISABLE = 0x0,ENABLE = 0x1</enum>
  <writeable/>
  <default>ENABLE</default>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_SPI_BUS_DIV_REF</id>
  <targetType>TARGET_TYPE_HUB_CHIP,TARGET_TYPE_OCMB_CHIP</targetType>
  <description>
    Ref clock SPI bus divider consumed by code running out of OTPROM
    bits  0:11 - clock divider; minimum allowed value is 4
    bits 12:15 - receiver delay in cycles; allowed range 0..7
  </description>
  <valueType>uint16</valueType>
  <writeable/>
  <default>0x0041</default>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_SIM_CHIPLET_MASK</id>
  <targetType>TARGET_TYPE_HUB_CHIP, TARGET_TYPE_COMPUTE_CHIP, TARGET_TYPE_PROC_CHIP, TARGET_TYPE_OCMB_CHIP</targetType>
  <description>
    Simulation attribute to enable the chiplets actually exist in model.
    To mark chiplet as present set corresponding chiplet ID bit position to 1 in 64 bit mask value.
  </description>
  <valueType>uint64</valueType>
  <default>0xFFFFFFFFFFFFFFFF</default>
  <writeable/>
</attribute>
<!-- ********************************************************************** -->
<attribute>
  <id>ATTR_SCAN0_SCAN_RATIO</id>
  <targetType>TARGET_TYPE_HUB_CHIP, TARGET_TYPE_COMPUTE_CHIP, TARGET_TYPE_PROC_CHIP, TARGET_TYPE_OCMB_CHIP</targetType>
  <description>
    If non-zero, override the scan ratio value for all SCAN0 operations to this value
    If zero, do not change the scan ratio for SCAN0
  </description>
  <valueType>uint8</valueType>
  <platInit>mrw</platInit>
  <default>0x0</default>
</attribute>
<!-- ********************************************************************** -->
</attributes>
