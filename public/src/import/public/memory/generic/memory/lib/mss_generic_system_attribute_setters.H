/* IBM_PROLOG_BEGIN_TAG                                                   */
/* This is an automatically generated prolog.                             */
/*                                                                        */
/* $Source: public/src/import/public/memory/generic/memory/lib/mss_generic_system_attribute_setters.H $ */
/*                                                                        */
/* OpenPOWER sbe Project                                                  */
/*                                                                        */
/* Contributors Listed Below - COPYRIGHT 2022,2023                        */
/* [+] International Business Machines Corp.                              */
/*                                                                        */
/*                                                                        */
/* Licensed under the Apache License, Version 2.0 (the "License");        */
/* you may not use this file except in compliance with the License.       */
/* You may obtain a copy of the License at                                */
/*                                                                        */
/*     http://www.apache.org/licenses/LICENSE-2.0                         */
/*                                                                        */
/* Unless required by applicable law or agreed to in writing, software    */
/* distributed under the License is distributed on an "AS IS" BASIS,      */
/* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or        */
/* implied. See the License for the specific language governing           */
/* permissions and limitations under the License.                         */
/*                                                                        */
/* IBM_PROLOG_END_TAG                                                     */
// mss_generic_system_attribute_setters.H
#ifndef MSS_GENERIC_SYSTEM_ATTR_SETTERS_H_
#define MSS_GENERIC_SYSTEM_ATTR_SETTERS_H_

#include <fapi2.H>
#include <generic/memory/lib/utils/index.H>
#include <generic/memory/lib/utils/c_str.H>



namespace mss
{
namespace attr
{
///
/// @brief ATTR_MFG_FLAGS setter
/// @param[in] uint32_t&[] ref to array of values to set
/// @note Generated by gen_accessors.pl generate_other_attr_params
/// @return fapi2::ReturnCode - FAPI2_RC_SUCCESS iff set is OK
/// @note  The manufacturing flags. These enums represent which bit/flag to set in numeric
/// form, NOT binary form. These values/policies can no longer be bit wised together.
/// These numeric values match the flags as found in the PDF document: 'Hypervisor Interface
/// Data Specifications v10.5o-1.pdf', section 6.1.9 and should stay in sync with this
/// document and updated when said document gets updated.
///
inline fapi2::ReturnCode set_mfg_flags(uint32_t (&i_array)[4])
{
    uint32_t l_value[4] = {};

    FAPI_TRY( FAPI_ATTR_GET(fapi2::ATTR_MFG_FLAGS, fapi2::Target<fapi2::TARGET_TYPE_SYSTEM>(), l_value) );
    memcpy(&l_value, i_array, 16);
    FAPI_TRY( FAPI_ATTR_SET(fapi2::ATTR_MFG_FLAGS, fapi2::Target<fapi2::TARGET_TYPE_SYSTEM>(), l_value) );

fapi_try_exit:
    return fapi2::current_err;
}


///
/// @brief ATTR_MEM_PORT_POS_OF_FAIL_THROTTLE setter
/// @param[in] uint64_t the value to set
/// @note Generated by gen_accessors.pl generate_other_attr_params
/// @return fapi2::ReturnCode - FAPI2_RC_SUCCESS iff set is OK
/// @note  This is the fapi position of the port that failed to calculate memory throttles
/// given the passed in watt target and or utilization
///
inline fapi2::ReturnCode set_port_pos_of_fail_throttle(uint64_t i_value)
{

    FAPI_TRY( FAPI_ATTR_SET(fapi2::ATTR_MEM_PORT_POS_OF_FAIL_THROTTLE, fapi2::Target<fapi2::TARGET_TYPE_SYSTEM>(),
                            i_value) );

fapi_try_exit:
    return fapi2::current_err;
}


} // attr
} // mss

#endif
